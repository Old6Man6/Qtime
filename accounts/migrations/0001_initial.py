# Generated by Django 5.1.6 on 2025-05-12 14:48

import accounts.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(db_index=True, max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must start with 09 and be exactly 11 digits.', regex='^09\\d{9}$')], verbose_name='Phone')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True, validators=[django.core.validators.EmailValidator(message='Enter a valid email address.')], verbose_name='Email')),
                ('full_name', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Full name can only contain Persian or English letters and spaces.', regex='^[a-zA-Z\\u0600-\\u06FF\\s]+$')], verbose_name='Name')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=accounts.models.profile_image_path, verbose_name='Avatar')),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin'), ('provider', 'provider')], default='user', max_length=8, verbose_name='Role')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
